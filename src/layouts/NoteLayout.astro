---
import { Image } from "astro:assets";
import { type CollectionEntry } from "astro:content";
import PageLayout from "./PageLayout.astro";

type CollectionData = CollectionEntry<"notes">["data"];

interface Props extends CollectionData {
  vault: boolean;
}
const { title, description, pubDate, updatedDate, heroImage, vault } = Astro.props;
---

<PageLayout title={title} description={description} image={heroImage}>
  <div class="mt-8 mb-4 space-y-8">
    <article>
      {
        !vault && (
          <div class="flex flex-col gap-1">
            <time datetime={pubDate.toISOString()}>
              {pubDate.toLocaleDateString("en-us", {
                year: "numeric",
                month: "long",
                day: "numeric",
              })}
            </time>

            {updatedDate && (
              <div class="text-xs opacity-90">
                updated on{" "}
                <time datetime={updatedDate.toISOString()}>
                  {updatedDate.toLocaleDateString("en-us", {
                    year: "numeric",
                    month: "long",
                    day: "numeric",
                  })}
                </time>
              </div>
            )}
          </div>
        )
      }

      <div class="mt-2 mb-10 flex flex-col gap-1.5">
        <h1 class="text-3xl font-bold">
          {title}
        </h1>

        {
          vault && updatedDate && (
            <div class="text-sm opacity-90">
              updated{" "}
              <time datetime={updatedDate.toISOString()}>
                {updatedDate.toLocaleDateString("en-us", {
                  year: "numeric",
                  month: "long",
                  day: "numeric",
                })}
              </time>
            </div>
          )
        }
        {
          heroImage && (
            <Image width={720} height={360} src={heroImage} alt="" class="rounded-md shadow-md" />
          )
        }
      </div>
      <div class="prose min-w-0">
        <slot />
      </div>
    </article>

    {
      vault ? undefined : (
        <button
          class="text-accent group cursor-pointer"
          onclick={"window.scrollTo({ top: 0, behavior: 'smooth' })"}
        >
          &uparrow; <span class="group-hover:underline">back to top</span>
        </button>
      )
    }
  </div>
</PageLayout>
