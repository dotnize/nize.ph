---
import Analytics from "@vercel/analytics/astro";
import { Font } from "astro:assets";
import "./base.css";

import { SITE_DESCRIPTION, SITE_TITLE, type LayoutProps } from "~/consts";
export type Props = LayoutProps;

const canonicalURL = new URL(Astro.url.pathname, Astro.site);

const { title = "Nathaniel John Tampus", description = SITE_DESCRIPTION, image } = Astro.props;

const fullTitle = `${title} - ${SITE_TITLE}`;
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width,initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <link rel="sitemap" href="/sitemap-index.xml" />

    <link rel="apple-touch-icon" sizes="180x180" href="/apple-touch-icon.png" />
    <link rel="icon" type="image/png" sizes="32x32" href="/favicon-32x32.png" />
    <link rel="icon" type="image/png" sizes="16x16" href="/favicon-16x16.png" />
    <meta name="msapplication-TileColor" content="#000000" />
    <meta name="theme-color" content="#000000" />

    <link rel="canonical" href={canonicalURL} />

    <title>{fullTitle}</title>
    <meta name="title" content={fullTitle} />
    <meta name="author" content="Nathaniel John Tampus" />
    <meta name="description" content={description} />

    <meta property="og:site_name" content="Nathaniel John Tampus" />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={Astro.url} />
    <meta property="og:title" content={fullTitle} />
    <meta property="og:description" content={description} />
    {image && <meta property="og:image" content={new URL(image, Astro.url)} />}

    <meta property="twitter:card" content="summary_large_image" />
    <meta property="twitter:url" content={Astro.url} />
    <meta property="twitter:title" content={fullTitle} />
    <meta property="twitter:description" content={description} />
    {image && <meta property="twitter:image" content={new URL(image, Astro.url)} />}

    <Font cssVariable="--font-custom" preload />

    <script is:inline>
      function setTheme(doc) {
        if (localStorage.theme === "macchiato") {
          doc.documentElement.classList.remove("dark");
          doc.documentElement.classList.remove("light");
          doc.documentElement.classList.add("macchiato");
        } else if (
          localStorage.theme === "dark" ||
          (!localStorage.getItem("theme") &&
            window.matchMedia("(prefers-color-scheme: dark)").matches)
        ) {
          doc.documentElement.classList.add("dark");
          doc.documentElement.classList.remove("light");
          doc.documentElement.classList.remove("macchiato");
        } else {
          doc.documentElement.classList.remove("dark");
          doc.documentElement.classList.add("light");
          doc.documentElement.classList.remove("macchiato");
        }
      }
      setTheme(document);
      document.addEventListener("astro:before-swap", (ev) => setTheme(ev.newDocument));
      console.log("Hello, fellow developer! ðŸ‘‹");
    </script>
  </head>
  <body class="bg-background text-foreground font-main overflow-y-scroll">
    <slot />

    <Analytics />
  </body>
</html>
